{"version":3,"sources":["img/bg.png","components/styles/StyleCell.js","tetrominos.js","components/Cell.js","components/styles/StyleStage.js","components/Stage.js","components/styles/StyleDisplay.js","components/Display.js","components/styles/StyleStartButton.js","components/StartButton.js","gameHelpers.js","components/styles/StyleTetris.js","hooks/useStage.js","hooks/useGameStatus.js","components/Tetris.js","hooks/usePlayer.js","hooks/useInterval.js","App.js","index.js"],"names":["module","exports","StyleCell","style","div","props","color","type","TETROMINOS","0","shape","I","J","L","O","S","T","Z","randomTetromino","Math","floor","random","length","React","memo","StyledStage","styled","height","width","Stage","stage","map","row","cell","x","key","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","createStage","Array","from","fill","checkCollision","player","moveX","moveY","y","tetromino","pos","StyledTetrisWrapper","bgImage","StyledTetris","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","forEach","value","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","Tetris","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","console","log","movePlayerHorizontal","drop","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b109317.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.2810fe6b.png\";","import style from 'styled-components';\r\n\r\nexport const StyleCell = style.div`\r\n  width: auto;\r\n  background: rgba(${(props) => props.color}, 0.7);\r\n  border: ${(props) => (props.type === 0 ? '0px solid' : '4px solid')};\r\n  border-bottom-color: rgba(${(props) => props.color}, 0.1);\r\n  border-right-color: rgba(${(props) => props.color}, 1);\r\n  border-top-color: rgba(${(props) => props.color}, 1);\r\n  border-left-color: rgba(${(props) => props.color}, 0.3);\r\n`;\r\n","export const TETROMINOS = {\r\n  0: { shape: [[0]], color: '0, 0, 0' },\r\n  I: {\r\n    shape: [\r\n      [0, 'I', 0, 0],\r\n      [0, 'I', 0, 0],\r\n      [0, 'I', 0, 0],\r\n      [0, 'I', 0, 0],\r\n    ],\r\n    color: '80, 227, 230',\r\n  },\r\n  J: {\r\n    shape: [\r\n      [0, 'J', 0],\r\n      [0, 'J', 0],\r\n      ['J', 'J', 0],\r\n    ],\r\n    color: '36, 95, 223',\r\n  },\r\n  L: {\r\n    shape: [\r\n      [0, 'L', 0],\r\n      [0, 'L', 0],\r\n      [0, 'L', 'L'],\r\n    ],\r\n    color: '223, 173, 36',\r\n  },\r\n  O: {\r\n    shape: [\r\n      ['O', 'O'],\r\n      ['O', 'O'],\r\n    ],\r\n    color: '223, 217, 36',\r\n  },\r\n  S: {\r\n    shape: [\r\n      [0, 'S', 'S'],\r\n      ['S', 'S', 0],\r\n      [0, 0, 0],\r\n    ],\r\n    color: '48, 211, 56',\r\n  },\r\n  T: {\r\n    shape: [\r\n      [0, 0, 0],\r\n      ['T', 'T', 'T'],\r\n      [0, 'T', 0],\r\n    ],\r\n    color: '132, 61, 198',\r\n  },\r\n  Z: {\r\n    shape: [\r\n      ['Z', 'Z', 0],\r\n      [0, 'Z', 'Z'],\r\n      [0, 0, 0],\r\n    ],\r\n    color: '227, 78, 78',\r\n  },\r\n};\r\n\r\nexport const randomTetromino = () => {\r\n  const tetrominos = 'IJLOSTZ';\r\n  const randomTetromino =\r\n    tetrominos[Math.floor(Math.random() * tetrominos.length)];\r\n\r\n  return TETROMINOS[randomTetromino];\r\n};\r\n","import React from 'react';\r\nimport { StyleCell } from './styles/StyleCell';\r\nimport { TETROMINOS } from '../tetrominos';\r\n\r\nconst Cell = ({ type }) => {\r\n  return <StyleCell type={type} color={TETROMINOS[type].color} />;\r\n};\r\n\r\nexport default React.memo(Cell);\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledStage = styled.div`\r\n  display: grid;\r\n  grid-template-rows: repeat(\r\n    ${(props) => props.height},\r\n    calc(25vw / ${(props) => props.width})\r\n  );\r\n  grid-template-columns: repeat(${(props) => props.width}, 1fr);\r\n  grid-gap: 1px;\r\n  border: 2px solid #333;\r\n  width: 100%;\r\n  max-width: 25vw;\r\n  background: #111;\r\n`;\r\n","import React from 'react';\r\nimport Cell from './Cell';\r\nimport { StyledStage } from './styles/StyleStage';\r\n\r\nconst Stage = ({ stage }) => {\r\n  return (\r\n    <StyledStage width={stage[0].length} height={stage.length}>\r\n      {stage.map((row) =>\r\n        row.map((cell, x) => <Cell key={x} type={cell[0]} />)\r\n      )}\r\n    </StyledStage>\r\n  );\r\n};\r\n\r\nexport default Stage;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledDisplay = styled.div`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0 0 20px 0;\r\n  padding: 20px;\r\n  border: 4px solid #333;\r\n  min-height: 30px;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n  color: ${(props) => (props.gameOver ? 'red' : '#999')};\r\n  background: #000;\r\n  font-family: Pixel, Arial, Helvetica, sans-sarif;\r\n  font-size: 0.8rm;\r\n`;\r\n","import React from 'react';\r\nimport { StyledDisplay } from './styles/StyleDisplay';\r\n\r\nconst Display = ({ gameOver, text }) => {\r\n  return <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>;\r\n};\r\n\r\nexport default Display;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledStartButton = styled.button`\r\n  box-sizing: border-box;\r\n  margin: 0 0 20px 0;\r\n  padding: 20px;\r\n  min-height: 30px;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n  border: none;\r\n  color: #fff;\r\n  background: #333;\r\n  font-family: Pixel, Arial, Helvetica, sans-sarif;\r\n  font-size: 1rem;\r\n  outline: none;\r\n  cursor: pointer;\r\n`;\r\n","import React from 'react';\r\nimport { StyledStartButton } from './styles/StyleStartButton';\r\n\r\nconst StartButton = ({ callback }) => {\r\n  return <StyledStartButton onClick={callback}>Start Game</StyledStartButton>;\r\n};\r\n\r\nexport default StartButton;\r\n","export const STAGE_WIDTH = 12;\r\nexport const STAGE_HEIGHT = 20;\r\n\r\nexport const createStage = () =>\r\n  Array.from(Array(STAGE_HEIGHT), () =>\r\n    new Array(STAGE_WIDTH).fill([0, 'clear'])\r\n  );\r\n\r\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\r\n  for (let y = 0; y < player.tetromino.length; y += 1) {\r\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\r\n      // 1. Check that we are on an actual tetromino cell\r\n      if (player.tetromino[y][x] !== 0) {\r\n        if (\r\n          // 2. Check that our move is inside the game area height (y)\r\n          // We shouldn't go through the bottom of the play area\r\n          !stage[y + player.pos.y + moveY] ||\r\n          // 3. Check that our move is inside the game area width (x)\r\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\r\n          // 4. Check that the cell we're moving to isn't set to clear\r\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\r\n            'clear'\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","import styled from 'styled-components';\r\n\r\nimport bgImage from '../../img/bg.png';\r\n\r\nexport const StyledTetrisWrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: url(${bgImage}) #000;\r\n  background-size: cover;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const StyledTetris = styled.div`\r\n  display: flex;\r\n  align-item; flex-start;\r\n  padding: 40px;\r\n  margin: 0 auto;\r\n  max-width: 900px;\r\n\r\n  aside {\r\n    width: 100%;\r\n    max-width: 200px;\r\n    display: block;\r\n    padding: 0 20px;\r\n  }\r\n`;\r\n","import { useState, useEffect } from 'react';\r\nimport { createStage } from '../gameHelpers';\r\n\r\nexport const useStage = (player, resetPlayer) => {\r\n  const [stage, setStage] = useState(createStage());\r\n  const [rowsCleared, setRowsCleared] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setRowsCleared(0);\r\n\r\n    const sweepRows = (newStage) =>\r\n      newStage.reduce((ack, row) => {\r\n        if (row.findIndex((cell) => cell[0] === 0) === -1) {\r\n          setRowsCleared((prev) => prev + 1);\r\n          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\r\n          return ack;\r\n        }\r\n        ack.push(row);\r\n        return ack;\r\n      }, []);\r\n\r\n    const updateStage = (prevStage) => {\r\n      //  First flush the stage\r\n      const newStage = prevStage.map((row) =>\r\n        row.map((cell) => (cell[1] === 'clear' ? [0, 'clear'] : cell))\r\n      );\r\n\r\n      // Then draw the Tetromino\r\n      player.tetromino.forEach((row, y) => {\r\n        row.forEach((value, x) => {\r\n          if (value !== 0) {\r\n            newStage[y + player.pos.y][x + player.pos.x] = [\r\n              value,\r\n              `${player.collided ? 'merged' : 'clear'}`,\r\n            ];\r\n          }\r\n        });\r\n      });\r\n\r\n      // Then check if we collided\r\n      if (player.collided) {\r\n        resetPlayer();\r\n        return sweepRows(newStage);\r\n      }\r\n\r\n      return newStage;\r\n    };\r\n    setStage((prev) => updateStage(prev));\r\n  }, [player, resetPlayer]);\r\n\r\n  return [stage, setStage, rowsCleared];\r\n};\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nexport const useGameStatus = (rowsCleared) => {\r\n  const [score, setScore] = useState(0);\r\n  const [rows, setRows] = useState(0);\r\n  const [level, setLevel] = useState(0);\r\n\r\n  const linePoints = [40, 100, 300, 1200];\r\n\r\n  const calcScore = useCallback(() => {\r\n    // We have score\r\n    if (rowsCleared > 0) {\r\n      // This is how original Tetris score is calculated\r\n      setScore((prev) => prev + linePoints[rowsCleared - 1] * (level + 1));\r\n      setRows((prev) => prev + rowsCleared);\r\n    }\r\n  }, [level, linePoints, rowsCleared]);\r\n\r\n  useEffect(() => {\r\n    calcScore();\r\n  }, [calcScore, rowsCleared, score]);\r\n\r\n  return [score, setScore, rows, setRows, level, setLevel];\r\n};\r\n","import React, { useState } from 'react';\r\n\r\n// Components\r\nimport Stage from './Stage';\r\nimport Display from './Display';\r\nimport StartButton from './StartButton';\r\n\r\nimport { createStage, checkCollision } from '../gameHelpers';\r\n\r\n// Style Components\r\nimport { StyledTetris, StyledTetrisWrapper } from './styles/StyleTetris';\r\n\r\n// Custom Hooks\r\nimport { usePlayer } from '../hooks/usePlayer';\r\nimport { useStage } from '../hooks/useStage';\r\nimport { useInterval } from '../hooks/useInterval';\r\nimport { useGameStatus } from '../hooks/useGameStatus';\r\n\r\nconst Tetris = () => {\r\n  const [dropTime, setDropTime] = useState(null);\r\n  const [gameOver, setGameOver] = useState(false);\r\n\r\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\r\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\r\n\r\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\r\n    rowsCleared\r\n  );\r\n\r\n  console.log('re-render');\r\n\r\n  const movePlayerHorizontal = (dir) => {\r\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\r\n      updatePlayerPos({ x: dir, y: 0 });\r\n    }\r\n  };\r\n\r\n  const startGame = () => {\r\n    // Reset Everything\r\n    setStage(createStage());\r\n    setDropTime(1000);\r\n    resetPlayer();\r\n    setGameOver(false);\r\n    setScore(0);\r\n    setRows(0);\r\n    setLevel(0);\r\n  };\r\n\r\n  const drop = () => {\r\n    // Increase level when player has cleared 10 rows\r\n    if (rows > (level + 1) * 10) {\r\n      setLevel((prev) => prev + 1);\r\n      // Also Increase Speed\r\n      setDropTime(1000 / (level + 1) + 200);\r\n    }\r\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\r\n      updatePlayerPos({ x: 0, y: 1, collided: false });\r\n    } else {\r\n      // Game Over\r\n      if (player.pos.y < 1) {\r\n        console.log('Game Over');\r\n        setGameOver(true);\r\n        setDropTime(null);\r\n      }\r\n      updatePlayerPos({ x: 0, y: 0, collided: true });\r\n    }\r\n  };\r\n\r\n  const keyUp = ({ keyCode }) => {\r\n    if (!gameOver) {\r\n      if (keyCode === 40) {\r\n        console.log('interval on');\r\n        setDropTime(1000 / (level + 1) + 200);\r\n      }\r\n    }\r\n  };\r\n\r\n  const dropPlayer = () => {\r\n    console.log('interval off');\r\n    setDropTime(null);\r\n    drop();\r\n  };\r\n\r\n  const move = ({ keyCode }) => {\r\n    if (!gameOver) {\r\n      // left\r\n      if (keyCode === 37) {\r\n        movePlayerHorizontal(-1);\r\n      } // right\r\n      else if (keyCode === 39) {\r\n        movePlayerHorizontal(1);\r\n      } // down\r\n      else if (keyCode === 40) {\r\n        dropPlayer();\r\n      } // up\r\n      else if (keyCode === 38) {\r\n        playerRotate(stage, 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  useInterval(() => {\r\n    drop();\r\n  }, dropTime);\r\n\r\n  return (\r\n    <StyledTetrisWrapper\r\n      role='button'\r\n      tabIndex='0'\r\n      onKeyDown={(e) => move(e)}\r\n      onKeyUp={keyUp}\r\n    >\r\n      <StyledTetris>\r\n        <Stage stage={stage} />\r\n        <aside>\r\n          {gameOver ? (\r\n            <Display gameOver={gameOver} text='Game Over' />\r\n          ) : (\r\n            <div>\r\n              <Display text={`Score ${score}`} />\r\n              <Display text={`Rows ${rows}`} />\r\n              <Display text={`Level ${level}`} />\r\n            </div>\r\n          )}\r\n          <StartButton callback={startGame} />\r\n        </aside>\r\n      </StyledTetris>\r\n    </StyledTetrisWrapper>\r\n  );\r\n};\r\n\r\nexport default Tetris;\r\n","import { useState, useCallback } from 'react';\r\n\r\nimport { randomTetromino, TETROMINOS } from '../tetrominos';\r\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers';\r\n\r\nexport const usePlayer = () => {\r\n  const [player, setPlayer] = useState({\r\n    pos: { x: 0, y: 0 },\r\n    tetromino: TETROMINOS[0].shape,\r\n    collided: false,\r\n  });\r\n\r\n  const rotate = (matrix, dir) => {\r\n    // Make the rows to become cols (transpose)\r\n    const rotatedTetro = matrix.map((_, index) =>\r\n      matrix.map((col) => col[index])\r\n    );\r\n\r\n    // Reverse each row to get a rotated matrix\r\n    if (dir > 0) return rotatedTetro.map((row) => row.reverse());\r\n\r\n    return rotatedTetro.reverse();\r\n  };\r\n\r\n  const playerRotate = (stage, dir) => {\r\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\r\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\r\n\r\n    const pos = clonedPlayer.pos.x;\r\n    let offset = 1;\r\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\r\n      clonedPlayer.pos.x += offset;\r\n      offset = -(offset + (offset > 0 ? 1 : -1));\r\n      if (offset > clonedPlayer.tetromino[0].length) {\r\n        rotate(clonedPlayer.tetromino, -dir);\r\n        clonedPlayer.pos.x = pos;\r\n      }\r\n    }\r\n    setPlayer(clonedPlayer);\r\n  };\r\n\r\n  const updatePlayerPos = ({ x, y, collided }) => {\r\n    setPlayer((prev) => ({\r\n      ...prev,\r\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\r\n      collided,\r\n    }));\r\n  };\r\n\r\n  const resetPlayer = useCallback(() => {\r\n    setPlayer({\r\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\r\n      tetromino: randomTetromino().shape,\r\n      collided: false,\r\n    });\r\n  }, []);\r\n\r\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\r\n};\r\n","import { useEffect, useRef } from 'react';\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      const id = setInterval(tick, delay);\r\n      return () => {\r\n        clearInterval(id);\r\n      };\r\n    }\r\n  }, [delay]);\r\n}\r\n","import React from 'react';\nimport Tetris from './components/Tetris';\n\nconst App = () => {\n  return (\n    <div>\n      <Tetris />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}